#!/usr/bin/env bash
set -euo pipefail

root=`dirname "$0"`
root=`realpath "$root"`

. "$root/../node_modules/faucet-pipeline/test/cli_harness.sh"

# ensures the second file is smaller than the first file
function assert_smaller_size {
	original=$(wc -c < "${1:?}")
	result=$(wc -c < "${2:?}")

	if [ $(bc <<< "$result < $original") != 1 ]; then
		fail "file \`$2\` is not smaller than \`$1\`"
	else
		true
	fi
}

begin "$root/test_basic"
	faucet
	assert_missing dist/test.txt
	assert_identical src/example.jpg dist/example.jpg
	assert_identical src/example.png dist/example.png
	assert_identical src/example.gif dist/example.gif
	assert_identical src/example.svg dist/example.svg
	assert_identical src/example.webp dist/example.webp
end

begin "$root/test_basic"
	faucet --compact
	assert_missing dist/test.txt
	assert_smaller_size src/example.jpg dist/example.jpg
	assert_smaller_size src/example.png dist/example.png
	assert_identical src/example.gif dist/example.gif
	assert_smaller_size src/example.svg dist/example.svg
	assert_identical src/example.webp dist/example.webp
end

begin "$root/test_custom"
	faucet --compact
	assert_missing dist/test.txt
	assert_missing dist/example.gif
	assert_missing dist/example.svg
	assert_missing dist/example.webp
	assert_identical expected.txt dist/example.jpg
	assert_identical expected.txt dist/example.png
end

begin "$root/test_fingerprint"
	faucet --fingerprint
	assert_identical src/example.jpg dist/fingerprint/example-fd9181b726249ab5bbf27fcdf35bd074.jpg
	assert_identical src/example.jpg dist/no-fingerprint/example.jpg
end


echo; echo "SUCCESS: all tests passed"
